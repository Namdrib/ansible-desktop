---

- name: Ensure target dirs exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop:
    - "{{ dnsmasq_config_dir }}"
  become: true

- name: Ensure target dirs exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: pihole
    group: pihole
    mode: "0775"
  loop:
    - "{{ pihole_config_dir }}"
  become: true

- name: Write setupVars file
  ansible.builtin.template:
    src: pihole-setupVars.conf.j2
    dest: "{{ pihole_config_dir }}/setupVars.conf"
    owner: root
    group: root
    mode: "0644"
  become: true

- name: Write dns file
  ansible.builtin.template:
    src: dns-overrides.conf.j2
    dest: "{{ dnsmasq_config_dir }}/03-dns-overrides.conf"
    owner: root
    group: root
    mode: "0644"
  notify: restart pihole dns
  become: true

# this file is automatically generated by the web interface
# but if we don't put it here ourselves then it never gets created
# because we're too clever with our automation ;)
- name: Write pihole dhcp configuration file
  ansible.builtin.template:
    src: pihole-dhcp.conf.j2
    dest: "{{ dnsmasq_config_dir }}/02-pihole-dhcp.conf"
    owner: root
    group: root
    mode: "0644"
  notify: restart pihole dns

- name: Write static dhcp file
  ansible.builtin.template:
    src: static-dhcp.conf.j2
    dest: "{{ dnsmasq_config_dir }}/04-pihole-static-dhcp.conf"
    owner: root
    group: root
    mode: "0644"
  register: dhcp_changed
  become: true

- name: Revoke existing leases if dhcpd file changed (delete)
  ansible.builtin.file:
    path: "{{ pihole_config_dir }}/dhcp.leases"
    state: absent
  when: dhcp_changed.changed
  become: true

- name: Revoke existing leases if dhcpd file changed (re-create)
  ansible.builtin.file:
    path: "{{ pihole_config_dir }}/dhcp.leases"
    state: touch
    owner: pihole
    group: pihole
    mode: "0644"
  when: dhcp_changed.changed
  become: true
